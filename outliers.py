# -*- coding: utf-8 -*-
"""Outliers.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17tX13IbYdG8_tHKQYEgeFJ5pkHZBfcdA
"""

import numpy as np

data = [10, 12, 14, 13, 100, 87, 5, 15, 16, 14, 13, 11]

Q1=np.percentile(data, 25)
Q2=np.percentile(data, 75)

IQR = Q2 - Q1

lower_bound = Q1 - 1.5 * IQR
upper_bound = Q2 + 1.5 * IQR

outliers = [x for x in data if x < lower_bound or x > upper_bound]

print(f"Q1 (25th percentile): {Q1}")
print(f"Q3 (75th percentile): {Q2}")
print(f"IQR (Interquartile Range): {IQR}")
print(f"Lower bound: {lower_bound}")
print(f"Upper bound: {upper_bound}")
print(f"Outliers: {outliers}")

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#Create a sample dataset with some outliers
np.random.seed(10)
data = pd.DataFrame({
    'value': np.concatenate([np.random.normal(0, 1, 100), np.random.normal(10, 1, 10)])
})

#calculate the IQR for box plot-based outerlier detection
Q1=data['value'].quantile(0.25)
Q3=data['value'].quantile(0.75)
IQR = Q3 - Q1

#Define threshold for outliers detection
lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR

#Identify the outliers
outliers = data[(data['value'] < lower_bound) | (data['value'] > upper_bound)]

print(f"Outliers based on Box plot criteria:\n[{outliers}]")

plt.figure(figsize=(12, 6))

plt.subplot(1, 2, 1)
sns.boxplot(x=data['value'])
plt.title('Box Plot')

plt.subplot(1, 2, 2)
sns.violinplot(x=data['value'])
plt.title('Violin plot')

plt.tight_layout()
plt.show()